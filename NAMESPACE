#############
## EXPORTS
#############
export(adiag1, A.mat, AI, AI2, AI3, atcg1234, bag, big.peaks.col, bathy.colors, brewer.pal, D.mat, design.score, E.mat, EM, EM2, EMMA, fdr, hadamard.prod, hdm, is.diagonal.matrix, is.square.matrix, jet.colors, matrix.trace, map.plot, maxi.qtl, mmer, mmerSNOW, mmer2, NR, NR22, phase.F1, poe, S.mat, score.calc, transp, TP.prep)

export(summary.mmer, summary.mmerM, residuals.mmer, residuals.mmerM, fitted.mmer, fitted.mmerM, plot.mmer, plot.mmerM, anova.mmer, anova.mmerM, coef.mmer, coef.mmerM, randef)

# S3 METHODS
#S3method(ranef, mmer)
#S3method(print, ranef.mmer)
S3method(summary, mmer)
S3method(print, summary.mmer)
S3method(residuals, mmer)
S3method(print, residuals.mmer)
S3method(fitted, mmer)
S3method(print, fitted.mmer)
S3method(coef, mmer)
S3method(print, coef.mmer)
S3method(anova, mmer)
S3method(plot, mmer)

## for multiple
S3method(summary, mmerM)
S3method(print, summary.mmerM)
S3method(residuals, mmerM)
S3method(print, residuals.mmerM)
S3method(fitted, mmerM)
S3method(print, fitted.mmerM)
S3method(coef, mmerM)
S3method(print, coef.mmerM)
S3method(anova, mmerM)
S3method(plot, mmerM)

############
# IMPORTS
############
  importFrom("graphics", "abline", "axis", "image", "layout", "legend",
             "lines", "plot", "points", "rect", "text", "locator",
             "par", "grid", "plot.new", "polygon","segments")
  importFrom("utils", "combn", "setTxtProgressBar", "txtProgressBar",
             "available.packages", "contrib.url")
  #importFrom("matrixcalc", "matrix.trace","is.diagonal.matrix", "is.square.matrix")
  importFrom("parallel", "detectCores","makeCluster","stopCluster")
  importFrom("lme4","lmer","VarCorr")
  #importFrom("foreach", "%dopar%")
  
  
#  importFrom("beepr", "beep")
## FULL IMPORTS
  import("methods")
  import("Matrix")
  import("MASS")
  import("foreach")

#  import("audio","play")
  
### extra suggested by CRAN
  importFrom("grDevices", "col2rgb", "colorRampPalette", "gray.colors",
             "rgb","dev.cur", "dev.size", "xy.coords")
  importFrom("stats", "as.formula", "cov", "density", "gaussian", "glm",
             "lm", "median", "optimize", "pbeta", "pchisq", "predict",
             "printCoefmat", "qqnorm", "smooth.spline", "var", "rnorm", 
             "model.matrix","na.omit", "p.adjust","kmeans","dist", "runif",
             "nobs", "ppoints", "sd", "model.frame", "model.response", "na.pass")


  
  

